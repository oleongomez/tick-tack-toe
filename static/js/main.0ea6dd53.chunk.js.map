{"version":3,"sources":["Board.jsx","reportWebVitals.js","index.js"],"names":["uuid","replace","c","r","Math","random","toString","calculateWinner","squares","lines","i","length","a","b","Cell","id","player","callback","useEffect","console","log","disableButton","Col","className","Button","onClick","e","disabled","createCell","Board","useState","setPlayer","Array","fill","setSquares","handleClick","new_state","slice","changePlayer","restartGame","Container","map","item","row","Row","col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAIA,SAASA,IACP,MAAO,uCAAuCC,QAAQ,SAAS,SAAUC,GACvE,IAAIC,EAAqB,GAAhBC,KAAKC,SAAiB,EAE/B,OADY,MAANH,EAAYC,EAAS,EAAJA,EAAW,GACzBG,SAAS,OAItB,SAASC,EAAgBC,GAWvB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaX,EAAb,KACA,GAAIM,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQN,GACpE,OAAOM,EAAQI,GAGnB,OAAO,KAGT,IAAME,EAAO,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC1BC,qBAAU,WACRC,QAAQC,IAAR,aAAkBL,EAAlB,wBACAI,QAAQC,IAAIJ,MAEd,IAAMK,EAAgB,SAACJ,GACrBA,EAASF,IAkBX,OAAO,mCAfY,SAACA,EAAIC,EAAQC,GAC9B,OACE,cAACK,EAAA,EAAD,CAAkBC,UAAU,iBAA5B,SACE,cAACC,EAAA,EAAD,CACED,UAAU,cACVE,QAAS,SAACC,GAAD,OAAOL,EAAcJ,IAC9BF,GAAIA,EAEJY,SAAwB,MAAdX,EAAOD,GALnB,SAOiB,MAAdC,EAAOD,GAAc,GAAKC,EAAOD,IAH7Bf,MALCA,KAaJ4B,CAAWb,EAAIC,EAAQC,MAkFpBY,EAhFD,WACZ,MAA4BC,mBAAS,GAArC,mBAAOd,EAAP,KAAee,EAAf,KACA,EAA8BD,mBAASE,MAAM,GAAGC,KAAK,OAArD,mBAAOzB,EAAP,KAAgB0B,EAAhB,KAEMC,EAAc,SAACzB,GACnB,IAAM0B,EAAY5B,EAAQ6B,QAC1BD,EAAU1B,GAAgB,IAAXM,EAAe,IAAM,IACpCG,QAAQC,IAAI,cAAegB,GAC3BF,EAAWE,GACXL,EAAUO,MAuBNA,EAAe,WACnB,OAAe,IAAXtB,EACK,EAEF,GAmBHuB,EAAc,WAClBL,EAAWF,MAAM,GAAGC,KAAK,OACzBF,EAAU,IAoBZ,OAAO,qBAAKR,UAAU,yDAAf,SAfH,eAACiB,EAAA,EAAD,CAAWjB,UAAU,SAArB,UAFM,CAAC,EAAG,EAAG,GAGRkB,KAAI,SAACC,GACN,OApDWC,EAoDMD,EAjDrB,cAACE,EAAA,EAAD,CACErB,UAAU,6DADZ,SAFM,CAAC,EAAG,EAAG,GAMRkB,KAAI,SAACI,GACN,OACE,cAAC,EAAD,CACE9B,GAAI,EAAI4B,EAAME,EACd5B,SAAUkB,EACVnB,OAAQR,GACHR,SARNA,KALO,IAAC2C,KAsDb,eAACC,EAAA,EAAD,CAAKrB,UAAU,aAAf,UACE,cAACD,EAAA,EAAD,CAAKC,UAAU,2EAAf,SACGhB,EAAgBC,GAnBvB,8BAEC,mCAAMD,EAAgBC,GAAtB,eAVD,8BAEE,yCAJgB,CAAE,EAAG,IAAK,EAAG,KAIHQ,GAA1B,gBA2BE,cAACM,EAAA,EAAD,CAAKC,UAAU,iBAAf,SACA,eAACC,EAAA,EAAD,CAAQD,UAAU,iBAAiBE,QAASc,EAA5C,cAA0D,yCAA1D,WAL+BvC,OAJCA,QC5G3B8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0ea6dd53.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Button, Col, Row, Container } from \"react-bootstrap\";\nimport \"./index.css\";\n\nfunction uuid() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nconst Cell = ({ id, player, callback }) => {\n  useEffect(() => {\n    console.log(`I, ${id}, am being rendered`);\n    console.log(player);\n  });\n  const disableButton = (callback) => {\n    callback(id);\n  };\n\n  const createCell = (id, player, callback) => {\n    return (\n      <Col key={uuid()} className=\"cell-col-class\">\n        <Button\n          className=\"cell-button\"\n          onClick={(e) => disableButton(callback)}\n          id={id}\n          key={uuid()}\n          disabled={player[id] != null}\n        >\n          {player[id] == null ? \"\" : player[id]}\n        </Button>\n      </Col>\n    );\n  };\n  return <>{createCell(id, player, callback)}</>;\n};\nconst Board = () => {\n  const [player, setPlayer] = useState(1);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n\n  const handleClick = (i) => {\n    const new_state = squares.slice();\n    new_state[i] = player === 1 ? \"X\" : \"O\";\n    console.log(\"new_state: \", new_state);\n    setSquares(new_state);\n    setPlayer(changePlayer());\n  };\n\n  const createRow = (row) => {\n    let a = [0, 1, 2];\n    return (\n      <Row\n        className=\"board-row d-flex align-items-center justify-content-center\"\n        key={uuid()}\n      >\n        {a.map((col) => {\n          return (\n            <Cell\n              id={3 * row + col}\n              callback={handleClick}\n              player={squares}\n              key={uuid()}\n            />\n          );\n        })}\n      </Row>\n    );\n  };\n  const changePlayer = () => {\n    if (player === 1) {\n      return 2;\n    }\n    return 1;\n  };\n  const renderPlayerInTurn = () => {\n    let player_symbol = { 1: \"X\", 2: \"O\" };\n    return (\n      <div\n      >\n        <h1> It is {player_symbol[player]} turn </h1>\n      </div>\n    );\n  };\n  const renderWinner = () => {\n    return (\n      <div\n      >\n       <h1> {calculateWinner(squares)} won!!!</h1>\n      </div>\n    );\n  };\n  const restartGame = () =>{\n    setSquares(Array(9).fill(null))\n    setPlayer(1)\n  }\n  const createBoard = () => {\n    let a = [0, 1, 2];\n    return (\n      <Container className=\"w-auto\"  key={uuid()}>\n        {a.map((item) => {\n          return createRow(item);\n        })}\n        <Row className=\"status-bar\" key={uuid()}>\n          <Col className=\"status-message d-flex flex-row align-items-center justify-content-center\">\n            {calculateWinner(squares) ? renderWinner() : renderPlayerInTurn()}\n          </Col>\n          <Col className=\"status-message\">\n          <Button className=\"restart-button\" onClick={restartGame}> <h1>Restart</h1> </Button>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n  return <div className=\"board d-flex align-items-center justify-content-center\">{createBoard()}</div>;\n};\n\nexport default Board;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Board from './Board'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Board />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}